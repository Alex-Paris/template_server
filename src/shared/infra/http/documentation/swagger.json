{
  "openapi": "3.0.Ë†",
  "info": {
    "title": "Template Project Documentation",
    "description": "This is a sample server Template server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.",
    "version": "1.0.0",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "me@alexparis.dev"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "http://localhost:3333/api/v1",
      "description": "Main server."
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "Operations about user",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "session",
      "description": "Operations about user sessions",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "password",
      "description": "Operations about user access password",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    }
  ],
  "paths": {
    "/user": {
      "post": {
        "deprecated": false,
        "tags": [
          "user"
        ],
        "summary": "Create a user",
        "description": "",
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Name Sample"
                  },
                  "email": {
                    "type": "string",
                    "example": "sample@email.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "samplepass"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "400": {
            "description": "Email already in use"
          }
        }
      }
    },
    "/session/authenticate": {
      "post": {
        "tags": [
          "session"
        ],
        "summary": "Authenticate a user session",
        "description": "",
        "operationId": "authenticateSession",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "sample@email.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "samplepass"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Session"
                }
              }
            },
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "refresh_token=abcde12345; Expires=Sat, 23 Jul 2022 09:29:15 GMT; Path=/; HttpOnly; SameSite=Lax; Domain=localhost"
                }
              }
            }
          },
          "401": {
            "description": "Incorrect email/password combination."
          }
        }
      }
    },
    "/session/refresh-token": {
      "post": {
        "tags": [
          "session"
        ],
        "summary": "Refresh user session token",
        "description": "",
        "operationId": "refreshSession",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Session"
                }
              }
            },
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "refresh_token=abcde12345; Expires=Sat, 23 Jul 2022 09:29:15 GMT; Path=/; HttpOnly; SameSite=Lax; Domain=localhost"
                }
              }
            }
          },
          "401": {
            "description": "Refresh token not found; Invalid Refresh Token; Expired Refresh Token; Refresh Token already revoked;"
          }
        }
      }
    },
    "/session/revoke-token": {
      "post": {
        "tags": [
          "session"
        ],
        "summary": "Revoke user session token",
        "description": "",
        "operationId": "revokeSession",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Refresh token not found; Invalid Refresh Token; Expired Refresh Token; Refresh Token already revoked;"
          }
        }
      }
    },
    "/password/forgot": {
      "post": {
        "tags": [
          "password"
        ],
        "summary": "Send an email to recover a user password",
        "description": "",
        "operationId": "forgotPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "sample@email.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Mail sended!"
          },
          "404": {
            "description": "User does not found."
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "avatar_url": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Session": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/User"
        },
        "token": {
          "type": "string"
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "refresh_token"
      }
    }
  }
}